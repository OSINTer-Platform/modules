from io import StringIO

# Function for taking in some details about an articles and creating a markdown file with those
def convertArticleToMD(article):

    articleFile = StringIO()

    articleFile.write(f"# {article.title}\n")
    articleFile.write(f"## {article.description}\n\n")
    articleFile.write("## Information:\n")

    # Convert the link for the article to markdown format
    MDSourceURL = f"[article]({article.url})"

    detailLabels = ["Source: ", "Link: ", "Date: ", "Author: "]
    for i,detail in enumerate([article.source, MDSourceURL, article.publish_date, article.author]):
        articleFile.write(f"+ {detailLabels[i]} {str(detail)}" + '\n')


    articleFile.write("\n## Article:\n")
    articleFile.write(f"![Article Image]({article.image_url})" + '\n')
    articleFile.write(article.formatted_content)

    articleFile.write("\n##Tags:\n")

    if "manual" in article.tags and article.tags["manual"] != {}:
        articleFile.write("\n" + "\n\n".join([f"#### {category.capitalize()}:\n" + " ".join([ f"[[{tag}]]" for tag in article.tags["manual"][category]]) for category in article.tags["manual"]]) + "\n")


    if "interresting" in article.tags:
        articleFile.write("\n### Objects of interrest:\n\n")
        for objectName in article.tags["interresting"]:

            articleFile.write(f"#### {objectName}\n[[{']] [['.join(article.tags['interresting'][objectName]['results'])}]]\n\n" if article.tags["interresting"][objectName]["tag"] else f"#### {objectName}\n{' '.join(article.tags['interresting'][objectName]['results'])}\n\n")


    if "automatic" in article.tags:
        articleFile.write("\n### Autogenerated Tags:\n\n")
        articleFile.write("[[" + "]] [[".join(article.tags["automatic"]) + "]] [[" + article.source + "]]")

    return articleFile
